<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<link REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<title>Running the Platform</title>
</head>

<body>

<h1>Running the Platform</h1>
<p>After installing (unzipping) the Eclipse SDK zip file into a directory (e.g., <tt>c:\eclipse</tt>),
the workbench is started by running the Eclipse executable found in the
top-level install directory.&nbsp; The executable is <tt>eclipse.exe</tt> on Windows
systems and simply <tt>eclipse</tt> on Linux systems.&nbsp; </p>

<p><img border="0" src="win_only.gif" width="51" height="13">The remaining discussion details the setup on Windows systems.&nbsp; The Linux setup is
analogous. </p>

<p>If you don't specify differently, the platform creates a default workspace
directory as a sibling of the executable (e.g., <tt>c:\eclipse\workspace</tt>).&nbsp;
This workspace directory is used as the default content area for your projects
and any required metadata.&nbsp;&nbsp;</p>

<p> For shared or
multi-workspace installs you should explicitly state the location of your
workspace rather than using the default.&nbsp; There are two ways to control the
location of your workspace:</p>

<ul>
  <li>using the current working directory</li>
  <li>using the <tt>-data</tt> command line argument.</li>
</ul>

<p>The easiest way to use the current working directory is to create a
shortcut using the following steps:</p>

<ol>
  <li>Navigate to <tt>eclipse.exe</tt> in the Windows Explorer and using a right button drag, create a shortcut
    to <tt>eclipse.exe</tt>.</li>
  <li>Edit the properties of the shortcut such that the &quot;Start in:&quot;
    box identifies the location of your workspace (e.g., <tt>c:\myworkspace</tt>).</li>
  <li>Close the properties dialog and double-click on the shortcut.</li>
</ol>
<p>Of course you can get the same effect using a command prompt by changing
directory to your workspace directory and then running <tt>eclipse.exe</tt>.</p>

<p>To use the <tt>-data</tt> command line argument, simply add <tt>-data</tt> &lt;your workspace
location&gt; (e.g., <tt>-data c:\myworkspace</tt>)
to the &quot;Target:&quot; line in the shortcut or include it explicitly on your
command prompt command line.&nbsp;</p>

<h2>Advanced topics </h2>

<p>The Eclipse executable and the platform itself offers a number of execution
options of interest to people developing or debugging parts of Eclipse.&nbsp;
The general form of running the Eclipse executable is:</p>

<blockquote>

<p><tt>eclipse [platform options] [-vmargs [Java VM arguments]]</tt></p>

</blockquote>

<p>where the valid platform options are:</p>

<div align="center">
  <center>

<table border="1" width="90%">
  <tr>
    <td width="25%" valign="top">
      <pre>-application &lt;app id&gt;</pre>
    </td>
    <td width="75%">Identifies the application to run.&nbsp; If not specified,
      the Eclipse workbench is run.&nbsp; Applications are declared by plug-ins
      supplying extensions to the org.eclipse.core.runtime.applications
      extension point.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-boot &lt;boot code path&gt;</pre>
    </td>
    <td width="75%">Defines the path to the boot plug-in code (i.e., boot.jar).&nbsp;
      Only required when changing the relative location of startup.jar and
      boot.jar.&nbsp;&nbsp;</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-consolelog</pre>
    </td>
    <td width="75%">Mirrors the platform's error log to the console used to run
      Eclipse.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-data &lt;workspace path&gt;</pre>
    </td>
    <td width="75%">Defines the path of the workspace on which to run the
      platform.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-debug [options file path]</pre>
    </td>
    <td width="75%">Puts the platform in debug mode and loads the debug options
      in the specified file.&nbsp; If a file path is not given, the platform
      looks in the platform install directory and in the workspace's metadata
      directory for a file called &quot;.options&quot;.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-dev [classpath entries]</pre>
    </td>
    <td width="75%">Puts the platform in development mode.&nbsp; The optional
      classpath entries (a comma-separated list) are added to each plug-in's classpath.&nbsp; For
      example, when developing plug-ins, use &quot;-dev bin&quot; to add the
      Java tooling's bin directory for each plug-in.&nbsp; Redundant or non-existant
      classpath entries are eliminated.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-nosplash</pre>
    </td>
    <td width="75%">Runs the platform without putting up the splash screen.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-os &lt;os-id&gt;</pre>
    </td>
    <td width="75%">Defines the operating system on which the platform is
      running.&nbsp; Typically the platform can detect the OS but some
      situations may require explicit specification.&nbsp; The value specified
      here is related to Platform.getOS().</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-vm &lt;vm path&gt;</pre>
    </td>
    <td width="75%">Specifies the Java VM to use to run the platform.&nbsp; If
      not specified, a Java VM is located relative to the Eclipse executable.</td>
  </tr>
  <tr>
    <td width="25%" valign="top">
      <pre>-ws &lt;ws-id&gt;</pre>
    </td>
    <td width="75%">Defines the window system on which the platform is
      running.&nbsp; In many cases the platform can detect the window system but
      some situations may require explicit specification.&nbsp; The value
      specified here is related to Platform.getWS().</td>
  </tr>
</table>

  </center>
</div>

<p>All arguments following (but not including) the <tt>-vmargs</tt> entry are passed
directly through to the indicated Java VM as virtual machine arguments (i.e.,
before the class to run).&nbsp; All arguments preceding the <tt>-vmargs</tt> entry (with
the exception of <tt>-vm</tt> and <tt>-nosplash</tt>) are passed directly through to the platform
for interpretation.</p>

<p><a href="hglegal.htm"><img SRC="ngibmcpy.gif" BORDER="0" height="12" width="250"></a></p>

</body>

</html>
