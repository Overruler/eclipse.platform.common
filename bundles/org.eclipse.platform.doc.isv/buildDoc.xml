<project name="Platform Doc Isv Build" default="all"  basedir="." >

<target name="all">
	<antcall target="convertSchemaToHtml" />
	<antcall target="examplesDocCopy" />
	<antcall target="generateJavadoc" />	
</target>

<target name="convertSchemaToHtml" if="eclipse.running">
	<property name="dest" value="reference/extension-points" />

    <record name="platformconvert.txt" action="start"/>
    <pde.convertSchemaToHTML manifest="../org.eclipse.ant.core/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.compare/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.search/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.core.resources/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.core.runtime/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.help/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.ui/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.ui.workbench.texteditor/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.debug.core/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.debug.ui/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.team.core/plugin.xml" destination="${dest}" />
 	<pde.convertSchemaToHTML manifest="../org.eclipse.team.ui/plugin.xml" destination="${dest}" />
    <pde.convertSchemaToHTML manifest="../org.eclipse.update.core/plugin.xml" destination="${dest}" />
    
    <record name="platformconvert.txt" action="stop"/>
</target>

<target name="examplesDocCopy" >
	<copy todir="samples">
    	<fileset dir="..">
    		<include name="org.eclipse.compare.examples/doc-html/"/>
    		<include name="org.eclipse.help.examples.ex1/doc-html/"/>
	    	<include name="org.eclipse.swt.examples/doc-html/"/>
	    	<include name="org.eclipse.swt.examples.controls/doc-html/"/>
	    	<include name="org.eclipse.swt.examples.launcher/doc-html/"/>
	        <include name="org.eclipse.swt.examples.layouts/doc-html/"/>
	   		<include name="org.eclipse.swt.examples.ole.win32/doc-html/"/>
	    	<include name="org.eclipse.swt.examples.paint/doc-html/"/>
	   		<include name="org.eclipse.ui.examples.javaeditor/doc-html/"/>
	    	<include name="org.eclipse.ui.examples.multipageeditor/doc-html/"/>
	    	<include name="org.eclipse.ui.examples.propertysheet/doc-html/"/>
	   		<include name="org.eclipse.ui.examples.readmetool/doc-html/"/>
	   		<include name="org.eclipse.team.examples.filesystem/doc-html/"/>
	    </fileset>
	 </copy>
</target>

<target name="generateJavadoc" if="JAVADOC14_HOME">

	<condition property="optionsFile" value="platformOptions">
	      <os family="unix" />
	</condition>
    <condition property="optionsFile" value="platformOptions.txt">
	      <os family="windows" />
    </condition>

	<replace file="${basedir}/${optionsFile}" token="@rt@" value="${bootclasspath}" />
		
	<!--scrub isv plugin directories of any preexisting api doc content-->
	<delete dir="reference/api"/>
	<mkdir dir="reference/api"/>

	<exec dir="." executable="${JAVADOC14_HOME}/javadoc" output="doc.bin.log">
		<arg line="@${basedir}/${optionsFile} -J-Xmx180m" />
	</exec>
	
</target>


</project>

