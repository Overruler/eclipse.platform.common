<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>org.eclipse.ui.perspectives</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">

<H3>
org.eclipse.ui.perspectives</H3>
<P >
We've already seen some ways the workbench allows the user to control the appearance of plug-in functionality. Views can be hidden or shown using the
<b> Perspective-&gt;Show View</b> menu. Action sets can be hidden or shown using the
<b> Perspective-&gt;Customize...</b> menu. These features help the user organize the clutter in the workbench at a fine grained level. </P>

<H4>
Perspectives</H4>
<P >
<b>
Perspectives</b> provide an additional layer of organization. Users can switch between perspectives as they move across tasks. A perspective defines an initial collection and layout of views that should be used when the user first switches to it. It also defines the initial visible action sets.</P>
<P >
The platform itself defines one perspective, the <b> Resource</b> perspective. Other platform plug-ins, such as
the help system and the Java tooling, define additional perspectives. Your plug-in can define its own
perspective by contributing to the <b><a href="../reference/extension-points/org_eclipse_ui_perspectives.html">org.eclipse.ui.perspectives</a></b>
extension point.</P>
<P >
The specification of the perspective in the <b> plugin.xml</b> is straightforward. The following markup is used by the workbench in defining its own resource perspective.</P>
<font color='#4444CC'><pre>
   &lt;extension
      point=&quot;org.eclipse.ui.perspectives&quot;&gt;
      &lt;perspective
         id=&quot;org.eclipse.ui.resourcePerspective&quot;
         name=&quot;Resource&quot;
         class=&quot;org.eclipse.ui.internal.ResourcePerspective&quot;&gt;
      &lt;/perspective&gt;
   &lt;/extension&gt;
</pre></font>
<P >
A plug-in must supply an <b> id</b> and <b> name</b> for the perspective, along with the name of the
<b> class</b> that implements the perspective. An <b> icon</b> can also be specified. The perspective class should implement
<b><a href="../reference/api/org/eclipse/ui/IPerspectiveFactory.html">IPerspectiveFactory</a></b>.</P>
<P >
We can see from the markup that the real work happens in the code. The interface for the perspective factory is straightforward. Implementors of
<b><a href="../reference/api/org/eclipse/ui/IPerspectiveFactory.html">IPerspectiveFactory</a></b>
are expected to configure an <b><a href="../reference/api/org/eclipse/ui/IPageLayout.html"> IPageLayout</a></b> with information that describes the
perspective and its perspective page layout. </P>


<H4>
Workbench part layout</H4>
<P >
One of the main jobs of an <b><a href="../reference/api/org/eclipse/ui/IPageLayout.html"> IPageLayout</a></b>
is to describe the placement of the editor and views in the workbench window. Note that these layouts are different than the
<a href="../reference/api/org/eclipse/swt/widgets/Layout.html"><b> Layout</b></a> class in SWT. Although
<b><a href="../reference/api/org/eclipse/ui/IPageLayout.html"> IPageLayout</a></b>
and <a href="../reference/api/org/eclipse/swt/widgets/Layout.html"><b> Layout</b></a>
solve a similar problem (sizing and positioning widgets within a larger area), you do not have to understand SWT layouts in order to supply a
perspective page layout.</P>
<P >
A perspective page layout is initialized with one area for displaying an editor. The perspective factory is responsible for adding additional views relative to the
editor. Views are added to the layout in relationship (top, bottom, left, right) to another part. Placeholders (empty space) can also be added for a view that is not initially shown.</P>
<P >
<a href="../reference/api/org/eclipse/ui/IFolderLayout.html"><b>
IFolderLayout</b></a> can be used to group views into tabbed folders. For example, the Resource perspective
places the resource navigator inside a folder at the top left corner of the
workbench.&nbsp; Placeholders are commonly used with folder layouts.
The Resource perspective defines a placeholder for the bookmarks view in the
same folder as the resource navigator. If the user shows the bookmarks view, it will appear in the same folder with the
navigator, with a tab for each view.</P>
<P >
 <b><a href="../reference/api/org/eclipse/ui/IPageLayout.html"> IPageLayout</a></b>
also allows you to add action sets to a perspective.&nbsp; You can also add a
 number of shortcuts to perspective related menus.&nbsp; A new wizard shortcut
 will add a new entry to the <b>File-&gt;New</b> menu for a perspective and
 invoke the appropriate wizard.&nbsp;&nbsp; View shortcuts add the names of
 views that should appear in the <b>Perspective-&gt;Show View</b>  menu when the
 perspective is active.&nbsp; Perspective shortcuts add the names of
 perspectives that should appear in the <b>Perspective-&gt;Open</b> menu when
 the perspective is active. </P>



<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" width="250" height="12"></a></p>

</BODY>
</HTML>
