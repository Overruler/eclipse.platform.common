<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Updating a product or extension</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h2>Updating a product or extension</h2>
<p>By following the prescribed procedures for packaging and installing products,
we can take advantage of the <b>platform update manager,</b> which treats
products and extensions in a uniform way and allows users to discover and
install updated versions of products and extensions.</p>
<p>Before looking at the implementation of such a server, it's important to
revisit some important concepts:</p>
<ul>
  <li>The platform provides a framework for defining <b>features</b> and update <b>sites</b>.&nbsp;
    The platform itself defines a concrete implementation of features and
    sites.&nbsp; This concrete implementation is what allows the update server
    to upgrade and install additional features.</li>
  <li>The platform <b>update server</b> can be used to <b>update</b> products by
    installing new versions of features.&nbsp; It can also be used to <b>install</b>
    or <b>update</b> extensions by adding or upgrading features.&nbsp;&nbsp;
    This is only possible for products and extensions that conform to the
    platform's concrete implementation of features and sites and conform to the
    appropriate install guidelines.</li>
  <li>Developers are free to use native installers and uninstallers to upgrade
    their own products and extensions without regard to sites and the
    update manager.</li>
</ul>
<p>That said, what do we do if we want to fully participate in the platform
update support as defined by the default implementation?</p>
<h3>Feature and plug-in packaging</h3>
<p>The previous example product and extension directory structures show how
features and plug-ins are laid out once they are installed.&nbsp; In order to
install features using the update server, the features must be packaged in a
feature archive file.&nbsp; This is described in <a href="../reference/misc/feature_archive.html"> Feature
Archive Files</a>. </p>
<p>Plug-ins and fragments must be packaged according to the format described in <a href="../reference/misc/plugin_archive.html"> Plug-in
Archive Files</a>.</p>
<h3>Update server layout</h3>
<p>The update server must be a URL-accessible server with a fixed layout.&nbsp;
The list of available features and plug-ins provided by the server is described
in a site map file, <b>site.xml</b>.&nbsp; The update server URL can be
specified a full URL to the site map file, or a URL of a directory path
containing the site map.&nbsp; The site map file contains a list of all the
available features and the location of the feature archives on the server.&nbsp;
It also describes the locations of the plug-in archives that are referenced in
the feature manifest.</p>
<p>A simple site layout for our example web product and extension could look something like this:</p>
<pre><font color="#4444CC">&lt;site root&gt;/
	site.xml
	features/	</font>(contains feature archive files)<font color="#4444CC">
		com.example.acme.acmefeature_1.0.1.jar
		com.example.betterwebs.betterfeature_1.0.1.jar
		...
	plugins/	</font>(contains plug-in archive files)<font color="#4444CC">
		com.example.acme.acmefeature_1.0.1.jar
		com.example.acme.acmewebsupport_1.0.3.jar
		com.example.betterwebs.betterfeature_1.0.1.jar
		com.example.betterwebs.betterwebsupport_1.0.1.jar
		...</font></pre>
<p>The complete definition for the site map is described in <a href="../reference/misc/update_sitemap.html"> Update Server Site Map</a>.</p>
<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>
</BODY>
</HTML>
