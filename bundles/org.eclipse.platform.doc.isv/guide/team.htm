<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Team support</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H1>
Team support</H1>
<p>
The Eclipse platform is based on the concept of letting users create and edit
resources in the file system.&nbsp; The <b>team</b> plug-in defines additional
API that allow plug-ins to integrate the function of a versioning and
configuration management repository.&nbsp; The function provided by a repository
fundamentally affects the user workflow, since there are additional steps for
retrieving files, comparing their content with local content, versioning them,
and returning updated files to the repository.&nbsp; The goal of the team
plug-in API is to be passive enough to allow repository plug-in providers to
define their own workflow so that users familiar with their product can use the
platform in a similar fashion.
</p>
<p>
This goal is accomplished by supplying basic hooks that allow team plug-ins to
intervene in operations that manipulate resources.&nbsp; For example, when the
user saves a file, a repository provider could save it to the repository, ask
the user whether it should be checked into the repository, or compare it with
the content in the repository.&nbsp;
</p>
<p>The UI support is also structured passively.&nbsp; Placeholders for team
provider actions, preferences, and properties are defined by the team UI
plug-in, but it's up to the team plug-in provider to define these UI
elements.&nbsp; The team UI plug-in also includes a simple, extendable
configuration wizard that lets users associate projects with repositories.&nbsp;
Plug-ins can supply content for this wizard that let the user specify repository
specific information.&nbsp;
</p>
<p>Multiple repository providers can coexist peacefully within the
platform.&nbsp; In fact, it's even possible to have different client
implementations for the same repository installed.&nbsp; For example, one could
install a CVS client designed for experts and a different one for novice users.
</p>




<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>
</BODY>
</HTML>
