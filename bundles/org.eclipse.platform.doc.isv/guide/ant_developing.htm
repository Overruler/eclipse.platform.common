<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Developing tasks and types
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h2>
Developing Ant tasks and types within Eclipse</h2>
<p>The following guidelines should be followed when developing and debugging Ant 
  tasks and types within Eclipse. These requirements stem from the fact that Ant 
  tasks and types must be loaded by the Ant classloader, rather than a plug-in 
  classloader, when Ant is run in the same VM as Eclipse. To avoid having the 
  Ant tasks and types loaded by a plug-in classloader, the tasks and types need 
  to be stored in a location that is not visible to any plug-in classloader. Also 
  see <a href="ant_contributing_task.htm">Contributing tasks and types</a>.
<ul>
  <li> Contributed Ant tasks or types should be defined in their own source folder 
    within a plug-in (i.e. separate from the source folders containing regular 
    plug-in classes)</li>
  <li>Each source folder containing the Ant tasks and types should have its own 
    output location that does not overlap with the output location of the regular 
    plug-in classes.</li>
  <li>When testing/debugging the new Ant tasks or types, the Run-time workspace 
    launch configuration must be configured to <b>exclude</b> the output locations 
    containing the Ant tasks and types. This is achieved by removing the Ant output 
    directories in the listing of the <b>Classpath Entries (-dev)</b> field on 
    the <b>Arguments</b> tab of a Run-time Workbench launch configuration.</li>
</ul>



<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corporation and others 2000, 2003." width="324" height="14"></a></p>
</BODY></HTML>