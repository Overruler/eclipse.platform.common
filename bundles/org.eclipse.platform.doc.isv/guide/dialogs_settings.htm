<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<link rel="stylesheet" type="text/css" HREF="../book.css">
<TITLE>Dialog settings</TITLE>


</HEAD>
<BODY BGCOLOR="#ffffff">



<h2>
Dialog settings</h2>
<P >
The <a href="../reference/api/org/eclipse/jface/dialogs/package-summary.html"> <b> org.eclipse.jface.dialogs</b></a> package provides a utility class,
<a href="../reference/api/org/eclipse/jface/dialogs/DialogSettings.html"><b>DialogSettings</b></a>, for storing and retrieving keyed values. You can use this class to save and retrieve primitive data types and string values that you associate with key names. The settings are loaded and saved using an XML file.</P>
<P ><a href="../reference/api/org/eclipse/ui/plugin/AbstractUIPlugin.html"><b>AbstractUIPlugin</b></a> provides support for plug-in wide dialog settings stored in an XML file in your plug-in's directory. If a dialog settings file is not found in your plug-in directory, an empty
<a href="../reference/api/org/eclipse/jface/dialogs/DialogSettings.html"> <b> DialogSettings</b></a> will be created for you. When the plug-in is shut down, any settings that were added to it will be saved in an XML file and retrieved the next time the plug-in is started up.</P>
<P >
You can access your dialog settings anywhere in your plug-in code. The following snippet shows how you could obtain the dialog settings for the readme tool.</P>
<font color='#4444CC'><pre>
   IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
</pre></font>
<P >
Values are stored and retrieved using get and put methods. The get methods are named after the type of primitive that is being accessed. You can store and retrieve
boolean, long, double, float, int, array, and string values. The following snippet shows how we could use dialog settings to initialize control values in a dialog.</P>
<font color='#4444CC'><pre>
   protected Control createDialogArea(Composite parent) {
      IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
      checkbox = new Button(parent,SWT.CHECK);
      checkbox.setText(&quot;Generate sample section titles&quot;);
      // initialize the checkbox according to the dialog settings
<b>      checkbox.setSelection(settings.getBoolean(&quot;GenSections&quot;));
</b>   }
</pre></font>
<P >
The value of the setting can be stored later when the ok button is pressed.</P>
<font color='#4444CC'><pre>
   protected void okPressed() {
      IDialogSettings settings = ReadmePlugin.getDefault().getDialogSettings();
      // store the value of the generate sections checkbox
<b>      settings.put(&quot;GenSections&quot;, checkbox.getSelection());
</b>      super.okPressed();
   }
</pre></font>

<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>

</BODY>
</HTML>
