<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>File types</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h3>File types</h3>
<p>The presence of a repository management system may dictate special handling
needs for files.&nbsp; For example, some files should be omitted from version
control.&nbsp; Some providers have special handling for text vs. binary
files.&nbsp; The team plug-in defines extension points that allow other plug-ins
to provide information about their file types.&nbsp; In all cases, special
handling is ultimately left up to the user via the team Preferences page.&nbsp;
These extensions allow plug-ins to seed the preferences with values appropriate
for the plug-in.</p>
<h4>Ignored files</h4>
<p>In several cases, it may be unnecessary to keep certain files under
repository control.&nbsp; For example, resources that are derived from existing
resources can often be omitted from the repository.&nbsp; For example, compiled
source files, (such as Java &quot;.class&quot; files), can be omitted since
their corresponding source (&quot;.java&quot;) file is in the repository.&nbsp;
It also may be inappropriate to version control metadata files that are
generated by repository providers.&nbsp; The <a href="../reference/extension-points/org_eclipse_team_core_ignore.html"><b>org.eclipse.team.core.ignore</b></a>
extension point allows providers to declare file types that should be ignored
for repository provider operations.&nbsp; For example, the CVS client declares
the following:</p>
<pre><font color="#4444CC">&lt;extension point=&quot;org.eclipse.team.core.ignore&quot;&gt;
	&lt;ignore pattern = &quot;.#*&quot; selected = &quot;true&quot;/&gt;
&lt;/extension&gt;</font></pre>
<p>The markup simply declares a file name <b>pattern</b> that should be ignored
and a <b>selected</b> attribute which declares the default selection value of
the file type in the preferences dialog.&nbsp; It is ultimately up to the user
to decide which files should be ignored.&nbsp; The user may select, deselect,
add or delete file types from the default list of ignored files.</p>
<p><img alt="" border="0" src="images/ignore.jpg" width="606" height="532"></p>
<h4>Text vs. binary files</h4>
<p>Some repositories implement different handling for text vs. binary
files.&nbsp; The <a href="../reference/extension-points/org_eclipse_team_core_fileTypes.html"><b>org.eclipse.team.core.fileTypes</b></a>
extension allows plug-ins to declare file types as text or binary files.&nbsp;
For example, the Java tooling declares the following:
</p>




<pre><font color="#4444CC">&lt;extension point=&quot;org.eclipse.team.core.fileTypes&quot;&gt;
  &lt;fileTypes extension=&quot;java&quot; type=&quot;text&quot;/&gt;
  &lt;fileTypes extension=&quot;classpath&quot; type=&quot;text&quot;/&gt;
  &lt;fileTypes extension=&quot;properties&quot; type=&quot;text&quot;/&gt;
  &lt;fileTypes extension=&quot;class&quot; type=&quot;binary&quot;/&gt;
  &lt;fileTypes extension=&quot;jar&quot; type=&quot;binary&quot;/&gt;
  &lt;fileTypes extension=&quot;zip&quot; type=&quot;binary&quot;/&gt;
&lt;/extension&gt; </font></pre>




<p>The markup lets plug-ins define a file type by <b>extension</b> and assign a <b>type</b>
of text or binary.&nbsp; As with ignored files, it is ultimately up to the user
to manage the list of text and binary file types.
</p>




<p><img border="0" src="images/filetypes.jpg" alt="" width="606" height="532">
</p>




<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>
</BODY>
</HTML>
