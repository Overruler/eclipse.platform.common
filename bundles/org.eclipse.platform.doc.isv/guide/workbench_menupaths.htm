<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
Menu and toolbar paths
</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">

<h2>
Menu and toolbar paths</h2>
<P >
We've seen many action contributions that specify the path for the location of their action. Let's take a close look at what these paths mean.&nbsp;
We'll look at paths by looking at the workbench <b>Help</b> menu.</P>

<H4>
Named groups</H4>
<P >
The locations for inserting new menus, menu items, or tool bar items are defined using named groups. You can think of
a named group as a slot or placeholder that allows you to insert your menu and toolbar contributions at certain points in a menu or
toolbar.</P>
<P >
The workbench defines all of its group slot names in the class <b><a href="../reference/api/org/eclipse/ui/IWorkbenchActionConstants.html">IWorkbenchActionConstants</a></b>. For each workbench menu, named groups are placed in the menu at locations where it is expected that
plug-ins will insert new actions.</P>
<P >
The following description of the help menu is adapted from the <a href="../reference/api/org/eclipse/ui/IWorkbenchActionConstants.html"><b> IWorkbenchActionConstants</b></a>
class definition.</P>
<font color='#4444CC'><pre>
   Standard Help menu actions
   Start group - HELP_START - &quot;start&quot;
   End group - HELP_END - &quot;end&quot;
   About action - ABOUT - &quot;About&quot;
</pre></font>
<P >
The standard workbench help menu consists of a named group called &quot;<b>start</b>,&quot; followed by a named group called &quot;<b>end</b>,&quot; followed by the &quot;<b>About</b>&quot; action.
Defining two groups gives plug-ins more control over where their contributed
items will be positioned within the help menu.&nbsp; When you define a menu, you can define as many slots as you like. Adding more slots gives other plug-ins more control over where their contributions appear relative to existing contributions. </P>
<P >
But wait!&nbsp; We know that there are other menu items on the Help menu.&nbsp;
These are added by plug-ins.&nbsp; For example, the help plug-in adds an action
set containing the &quot;Help Contents&quot; menu to the workbench.&nbsp; Here's
the markup from the <b>org.eclipse.help.ui</b> plug-in's
<b>plugin.xml</b>. </P>
<font color='#4444CC'><pre>
&lt;extension point=&quot;org.eclipse.ui.actionSets&quot;&gt;
	&lt;actionSet
		id=&quot;org.eclipse.help.internal.ui.HelpActionSet&quot;
		label=&quot;%help&quot;
		visible=&quot;true&quot;&gt;
			
	&lt;action id=&quot;org.eclipse.help.internal.ui.HelpAction&quot;
		<b>menubarPath=&quot;help/helpEnd&quot;</b>
		label=&quot;%helpcontents&quot;
		class=&quot;org.eclipse.help.ui.internal.HelpContentsAction&quot;
		icon=&quot;icons/view.gif&quot;
		helpContextId=&quot;org.eclipse.help.ui.helpContentsMenu&quot;
		tooltip=&quot;%openhelpcontents&quot;/&gt;
	...
</pre></font>
<P >
The new help action will be placed in the help menu, inside the <b> helpEnd</b> group. If no other plug-in has contributed to the help menu, this means the &quot;Help Contents&quot; menu item will appear as the first item in the menu above the &quot;About&quot; item. If another plug-in wanted to contribute an item that always appeared above the &quot;Help Contents&quot; item, then it could specify the
<b> helpStart</b> group on its path.&nbsp;&nbsp;</P>
<P >
Toolbar paths work similarly. Whenever a path is specified, it must end with the name of a group in the toolbar.</P>


<H4>
Fully qualified menu and tool paths</H4>
<P >
 A complete menu or toolbar path is simply &quot;menu name/group
 name.&quot;&nbsp; Menu names for the workbench are defined in
<b><a href="../reference/api/org/eclipse/ui/IWorkbenchActionConstants.html">IWorkbenchActionConstants</a></b>. This
 class is used to find that the fully qualified path name for our help action is
 &quot;<b>help/helpEnd</b>.&quot; </P>
<P >
Some menus have nested submenus. This is where longer paths come into play. If the help menu had defined a submenu called &quot;<b>submenu</b>&quot; with a named group called &quot;<b>submenuStart</b>,&quot; then the fully qualified menu path for an action in the new submenu would be &quot;<b>help/submenu/submenuStart</b>.&quot;</P>


<H4>
<a name="workbench_menus_nls">
Externalizing UI labels</a></H4>
<p>The example above demonstrates a technique for externalizing strings
that appear in the UI.&nbsp; Externalized strings are used to make translating the plug-in's UI to
other languages simpler.&nbsp; We can externalize the strings in our <b>plugin.xml
</b>files by replacing the string with a key (e.g. <b>%help,
%helpcontents</b>) and creating entries in the <b>plugin.properties</b>
file of the form:</p>
<font color='#4444CC'><pre>
   help = &quot;Help&quot;
   helpContents = &quot;Help Contents&quot;
</pre></font>
<P >
The <b>plugin.properties</b> file can be
translated for different languages and the <b>plugin.xml</b>
will not need to be modified.</P>


<H4>
Adding new menus and groups</H4>
<P >
In many of the examples we've seen so far, the actions contributed by the sample plug-ins have been added to existing named groups within menus and toolbars.</P>
<P >
The <b><a href="../reference/extension-points/org_eclipse_ui_actionSets.html">actionSets</a></b>,
<b><a href="../reference/extension-points/org_eclipse_ui_viewActions.html">viewActions</a></b>,
<b><a href="../reference/extension-points/org_eclipse_ui_editorActions.html">editorActions</a></b>, and
<b><a href="../reference/extension-points/org_eclipse_ui_popupMenus.html"> popupMenus</a></b> extension points also allow you to define new menus and groups within your contribution. This means that you can define new submenus or new
pull-down menus and contribute your actions to these new menus. In this case, the path for your new action will contain the name of your newly defined menu. </P>
<P>
We saw this technique when the readme tool defined a new menu for its action
set.&nbsp; Let's look at the markup one more time now that we've looked at menu
paths in more detail. </P>
<font color='#4444CC'><pre>
   &lt;extension point = &quot;org.eclipse.ui.actionSets&quot;&gt;
   &lt;actionSet id=&quot;org_eclipse_ui_examples_readmetool_actionSet&quot;
	   label=&quot;%ActionSet.name&quot;
	   visible=&quot;true&quot;&gt;
	   &lt;menu id=&quot;org_eclipse_ui_examples_readmetool&quot;
		   label=&quot;%ActionSet.menu&quot;
		   path=&quot;window/additions&quot;&gt; 
		   &lt;separator name=&quot;slot1&quot;/&gt;
		   &lt;separator name=&quot;slot2&quot;/&gt;
		   &lt;separator name=&quot;slot3&quot;/&gt;
	   &lt;/menu&gt;
	   &lt;action id=&quot;org_eclipse_ui_examples_readmetool_readmeAction&quot;
		   menubarPath=&quot;window/org_eclipse_ui_examples_readmetool/slot1&quot;
		   toolbarPath=&quot;readme&quot;
		   label=&quot;%ReadmeAction.label&quot;
		   tooltip=&quot;%ReadmeAction.tooltip&quot;
		   helpContextId=&quot;org.eclipse.ui.examples.readmetool.open_browser_action_context&quot;
		   icon=&quot;icons/ctool16/openbrwsr.gif&quot;
		   class=&quot;org.eclipse.ui.examples.readmetool.WindowActionDelegate&quot;
		   enablesFor=&quot;1&quot;&gt;
		   &lt;selection class=&quot;org.eclipse.core.resources.IFile&quot;
				name=&quot;*.readme&quot;&gt;
		   &lt;/selection&gt;
	   &lt;/action&gt;
	   ...
</pre></font>
<P >We added a new menu called&nbsp; &quot;<b>org_eclipse_ui_examples_readmetool</b>&quot;
whose label is defined in by the key &quot;<b>%ActionSet.name</b>&quot; in the
properties file. Within this menu, we define three named
groups:&nbsp; &quot;<b>slot1</b>,&quot; &quot;<b>slot2</b>,&quot;
and &quot;<b>slot3</b>.&quot;&nbsp; We add this new
menu to the path &quot;<b>window/additions</b>.&quot;</P>
<P >If we go back to <b><a href="../reference/api/org/eclipse/ui/IWorkbenchActionConstants.html">IWorkbenchActionConstants</a></b>,
we see this definition of the window menu in the javadoc:</P>
<font color='#4444CC'><pre>
    * &lt;h3&gt;Standard Window menu actions&lt;/h3&gt;
    * &lt;ul&gt;
    * &lt;li&gt;Extra Window-like action group (&lt;code&gt;WINDOW_EXT&lt;/code&gt;)&lt;/li&gt; 
</pre></font>
<P >
If we look further at the class definition, we will see these related
definitions: </P>


<font color='#4444CC'><pre>
   public static final String MENU_PREFIX = &quot;&quot;;
   ...
   public static final String M_WINDOW = MENU_PREFIX+&quot;window&quot;;
   ...
   public static final String MB_ADDITIONS = &quot;additions&quot;;  // Group.
   ...
   public static final String WINDOW_EXT = MB_ADDITIONS;   // Group.
</pre></font>


<P >
From this information, we can piece together the path for adding something to
the workbench &quot;Window&quot; menu.&nbsp; The menu itself is called &quot;<b>window</b>&quot;
and it defines one slot called &quot;<b>additions</b>.&quot;&nbsp;
We use the path &quot;<b>window/additions</b>&quot; to
add our new menu. </P>


<P >
In the action set declaration, we add an action to our newly defined menu, using
the path &quot;<b>window/org_eclipse_ui_examples_readmetool/slot1</b>.&quot; </P>


<P >
<img alt="" border="0" src="images/readmeactionsetmenu.jpg" width="569" height="75"> </P>


<P >Other plug-ins could add to our menu by using this same path (or perhaps one
of the other slots) to add one of their own menus.&nbsp;&nbsp; </P>


<P >In general, it's not good practice to contribute to another plug-in's menu
or tool bar by deriving the path name from the <b>plugin.xml</b>.&nbsp;
It's possible that a future version of the plug-in could change the names of the
paths.&nbsp; The recommended practice is to define a public interface (much like <b><a href="../reference/api/org/eclipse/ui/IWorkbenchActionConstants.html">IWorkbenchActionConstants</a></b>)
which specifies exactly which menus, tool bar groups, and slots are considered
fair game for use by other plug-ins. </P>


<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>


</BODY>
</HTML>
