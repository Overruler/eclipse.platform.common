<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Compare support</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H1>
Compare support</H1>


<p>
If your plug-in defines and manipulates its own resource types, you may have
special requirements for comparing resources.&nbsp; Comparing resources is
common when working with local history and files from a repository.&nbsp; The <b>compare</b>
plug-in provides services for implementing advanced compare views:</p>


<ul>
  <li>Two and three-way compare and merge components for hierarchical structures
    superimposed on text</li>
  <li>Differencing engines for hierarchical structures and character ranges in
    text</li>
  <li>Integration of patch files</li>
  <li>Comparing and merging with local history</li>
</ul>
<p>Two extension points are provided so that you can customize the compare for
your plug-in's content types:</p>

<ul>
	<li>
	<a href="../reference/extension-points/org_eclipse_compare_contentMergeViewers.html"><b>org.eclipse.compare.contentMergeViewers</b></a>
	<br>
	A content merge viewer performs a two-way or three-way compare of its inputs, presents the result
	side-by-side or in any other suitable way, and lets the user merge between the inputs.
    Content merge viewers are common for text or images.
	</li>

	<li>
	<a href="../reference/extension-points/org_eclipse_compare_structureMergeViewers.html"><b>org.eclipse.compare.structureMergeViewers</b></a>
	<br>
	A structure merge viewer performs a two-way or three-way compare of its inputs, presents the result
	in a hierarchical way, and lets the user merge between the inputs.&nbsp;
    Structure merge viewers are common for workspace resources or the members of
	an archive file.
	</li>
</ul>

<p>Because the implementation of most structure compare viewers is usually based
on a tree, the compare plugin provides a generic tree-based
<a href="../reference/api/org/eclipse/compare/structuremergeviewer/StructureDiffViewer.html"><b>StructureDiffViewer</b></a>
that defines its own extension point
<a href="../reference/extension-points/org_eclipse_compare_structureCreators.html"><b>org.eclipse.compare.structureCreators</b></a>.&nbsp;
A <b>structure creator</b> breaks a single input object into a hierarchical structure.
The <a href="../reference/api/org/eclipse/compare/structuremergeviewer/StructureDiffViewer.html"><b>StructureDiffViewer</b></a>
performs the compare on the resulting structure and displays the result as a tree.</p>
<p>

The <a href="../reference/extension-points/org_eclipse_compare_contentViewers.html"><b>org.eclipse.compare.contentViewers</b></a>
 extension point is for content viewers that do not compare their inputs.
A <b>content viewer</b> is used in places where only a single input is available and therefore
no compare is necessary. A typical example for this is the &quot;<b>Restore from Local
History</b>&quot; function. 
<p>

All compare viewers are standard <a href="jface_viewers.htm"> JFace viewers</a> that expect an input object implementing the
<b><a href="../reference/api/org/eclipse/compare/structuremergeviewer/ICompareInput.html">ICompareInput</b></a>
interface.
<p>
The compare plugin provides additional support for implementing viewers:
<ul>
<li>
<a href="compare_contentviewer.htm">content-oriented</a> compare and merge viewers
</li>
<li>
<a href="compare_structureviewer.htm">structure-oriented</a> compare and merge viewers.
</li>
</ul>

<p>
&nbsp;

<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>
</BODY>
</HTML>
