<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Compare support</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<H1>
Compare support</H1>


<p>
If your plug-in defines and manipulates its own resource types, you may have
special requirements for comparing resources.&nbsp; Resources are often compared
when working with local history or with files from a repository.&nbsp; The <b>compare</b>
plug-in supports the implementation of advanced compare views:</p>


<ul>
  <li>Two and three-way compare and merge components for hierarchical structures
    inferred from text.</li>
  <li>Differencing engines for hierarchical structures and character ranges in
    text.</li>
</ul>
<p>These services are used in the platform to assist with user tasks such as
integrating patch files and comparing/merging the workspace with local history.</p>
<p>

All compare viewers are standard <a href="jface_viewers.htm"> JFace viewers</a> that expect an input object implementing the
<b><a href="../reference/api/org/eclipse/compare/structuremergeviewer/ICompareInput.html">ICompareInput</b></a>
interface.
<p>
Compare viewers are said to be
<a href="compare_contentviewer.htm">content-oriented</a>  if they compare flat
inputs such as text or images and
<a href="compare_structureviewer.htm">structure-oriented</a>  if they compare
hierarchically structured input elements.

<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corporation and others 2000, 2003." border="0" width="324" height="14"></a></p>
</BODY>
</HTML>
