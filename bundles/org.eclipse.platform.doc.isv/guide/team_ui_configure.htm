<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="../book.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>Configuring a project</TITLE>

<link rel="stylesheet" type="text/css" HREF="../book.css">
</HEAD>
<BODY BGCOLOR="#ffffff">
<h3>
   Configuring a project
</h3><p>Typically, the first step in building a team UI is implementing a wizard
page that allows users to configure a project for your plug-in's team
support.&nbsp; This is where your team provider's id will be added to the
project's properties.&nbsp; You participate in project configuration by
contributing to the <a href="../reference/extension-points/org_eclipse_team_ui_configurationWizards.html"><b>org.eclipse.team.ui.configurationWizards</b></a>
extension point.&nbsp; This wizard is shown when the user chooses <b>Team-&gt;Share
Project...</b>
</p>
<p>We'll look at this in the context of the CVS client implementation.&nbsp;
Here is the CVS UI markup for its configuration wizard:
</p>
<pre><font color="#4444CC">&lt;extension
      point=&quot;org.eclipse.team.ui.configurationWizards&quot;&gt;
   &lt;wizard
        name=&quot;%SharingWizard.name&quot;
        icon=&quot;icons/full/wizards/newconnect_wiz.gif&quot;
        class=&quot;org.eclipse.team.internal.ccvs.ui.wizards.SharingWizard&quot;
        id=&quot;org.eclipse.team.ccvs.ui.SharingWizard&quot;&gt;
   &lt;/wizard&gt;
&lt;/extension&gt;</font></pre>
<p>As usual, plug-ins supply a <b>class</b> that implements the extension and a
unique <b>id</b> to identify their extension.&nbsp; The <b>name</b> and <b>icon</b>
are shown in the first page of the project configuration wizard if there are
multiple providers to choose from.
</p>
<p>Once the user has selected a provider, the next page shows the specific
configuration information for your provider.&nbsp; (If your provider is the only
team provider plug-in installed, then the wizard skips directly to your
page.)&nbsp; Your wizard must implement <a href="../reference/api/org/eclipse/team/ui/IConfigurationWizard.html"><b>IConfigurationWizard</b></a>,
which initializes the wizard for a specified workbench and project.&nbsp; The
rest of the implementation depends on the design of your wizard.&nbsp; You must
gather up any information needed to associate the project with your team
support.&nbsp;&nbsp;
</p>




<p> When the wizard is completed, you must map your team provider to the project
using <b><font color='#4444CC'><a href="../reference/api/org/eclipse/team/core/RepositoryProvider.html#map(org.eclipse.core.resources.IProject, java.lang.String)">RepositoryProvider.map(IProject,
String)</a></font></b>.&nbsp; Mapping handles the assignment of the correct
project persistent property to your project.
</p>




<p> The CVS client does this work in its provider's <b>setSharing</b>
method, which is called when its wizard is finished:
</p>




<pre><font color="#4444CC">public void setSharing(IProject project, FolderSyncInfo info, IProgressMonitor monitor) throws TeamException {
	
	// Ensure provided info matches that of the project
	...		
	// Ensure that the provided location is managed
	...		
	// Register the project with Team
<b>	RepositoryProvider.map(project, CVSProviderPlugin.getTypeId());
</b>}</font></pre>
<p>&nbsp;
</p>




<p><a href="../hglegal.htm"><img border="0" src="../ngibmcpy.gif" alt="Copyright IBM Corp. and others 2000,2002."width="250" height="12"></a></p>
</BODY>
</HTML>
