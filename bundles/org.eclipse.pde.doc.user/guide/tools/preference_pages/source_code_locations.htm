<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>Source Code Locations</title>
<link href="../../book.css" rel="stylesheet" type="text/css">
<style type="text/css">
<!--
.style1 {
	font-size: 18px;
	font-weight: bold;
}
.style2 {
	font-size: 12pt;
	font-weight: bold;
}
-->
</style>
</head>

<body>
<p class="style1">Source Code Locations</p>
<p>In Eclipse, source code and extension point schemas are shipped in separate <em>source</em> plug-ins. A <em>source</em> plug-in is a plug-in containing one or more source code locations.</p>
<p>&nbsp;</p>
<p class="style2">Declared Source Code Locations </p>
<p> A declared (pre-defined) source code location is an <em>org.eclipse.pde.core.source</em> extension.</p>
<p>Eclipse 3.2 comes with seven pre-defined source code locations. The extension point schemas and source archive(s) for a plug-in are located in a unique subdirectory under one of these source code locations. </p>
<p>Each subdirectory must have the <em>{id}_{version}</em> naming convention, where <em>id</em> is the plug-in ID and <em>version</em> is the plug-in version.</p>
<p>For instance, <em>org.eclipse.pde.source</em> is the plug-in containing the source code for all <em>org.eclipse.pde.*</em> plug-ins. </p>
<p>Therefore, the source code and extension point schemas for the <em>org.eclipse.pde.core</em> plug-in are located at <em>{eclipse_installation}/plugins/org.eclipse.pde.source_3.2.0.{qualifier}/src/org.eclipse.pde.core_3.2.0.{qualifier}/</em></p>
<p><img src="../../images/preferences/target_source.png" alt="Source Code Locations" hspace="30"></p>
<p>&nbsp;</p>
<p class="style2">Additional Source Code Locations</p>
<p>Additional source code locations can be specified without the use of an <em>org.eclipse.pde.core.source</em> extension by simply pressing <strong>Add...</strong> to browse the file system.</p>
<p>The subdirectories of the additional source code locations must follow the same layout and naming conventions described above for the declared source code locations. </p>
<p>&nbsp;</p>
<p class="style2">Source Archive Naming Convention </p>
<p>The ZIP archive containing the source code for a plug-in must follow the <em>{library_name}src.zip</em> naming convention.</p>
<p>For example, if a plug-in has the <strong>Bundle-ClassPath: xyz.jar</strong> <em>MANIFEST.MF</em> header, then the source code must be packaged in a ZIP archive named <strong>xyzsrc.zip</strong>.</p>
<p>If the plug-in classpath has no <strong>Bundle-ClassPath</strong> <em>MANIFEST.MF</em> header or the header is of the form <strong>Bundle-ClassPath: . </strong>, then the source code must be packaged in a ZIP archive named <strong>src.zip</strong>.  </p>
<p>&nbsp; </p>
</body>
</html>
