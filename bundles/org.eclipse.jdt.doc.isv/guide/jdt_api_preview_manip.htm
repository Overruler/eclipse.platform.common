<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css">
<title>Manipulating code with a preview in a Java editor</title>
<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body>
<h2>Previewing Java code manipulations</h2>
<p>The JDT Core plug-in provides API that allows you to programmatically create, 
  delete and modify Java elements. See <a href="jdt_api_manip.htm">manipulating 
  Java code</a> for an introduction to the API provided by JDT Core.&nbsp;&nbsp; </p>
<p>An important concept in the Java model is the use of an in-memory copy of a
compilation unit, called a &quot;working copy&quot; (<b><a href="../reference/api/org/eclipse/jdt/core/IWorkingCopy.html">IWorkingCopy</a></b>).&nbsp;
Using a working copy allows you to perform significant changes on a compilation
unit before committing the changes to the underlying resource. </p>
<p>In the Java user interface, a parallel concept is to allow the user to
extensively edit a resource before committing the working copy to the file
system.&nbsp; This is achieved by opening a Java editor on a working copy rather
than its associated resource.&nbsp; The user can then either save the Java editor's content 
  to disk or revert it back to its original content.&nbsp; </p>
<p> Below is a code snippet that 
  opens a compilation unit in an editor and then uses a working copy as the
input so that the changes are made to the copy rather than the resource: </p>
<pre><font color="#4444CC">    void modifyCompilationUnit(ICompilationUnit cunit) throws PartInitException, CoreException {
        IEditorPart editor= JavaUI.openInEditor(cunit);
        IEditorInput input= editor.getEditorInput();
        IWorkingCopyManager manager= JavaUI.getWorkingCopyManager();
        manager.connect(input);
        try {
            ICompilationUnit workingCopy= manager.getWorkingCopy(input);
            // do the modifications on workingCopy using the normal JDT Core API.
        } finally {
            manager.disconnect(input);
        }
        // either keep the editor dirty or use editor.doSave(IProgressMonitor monitor)
        // to save the changes programmatically.
    }
</font></pre>
<p><a href="../hglegal2002.htm"><img border="0" src="../ngibmcpy2002.gif" alt="Copyright IBM Corporation and others 2000, 2002. All Rights Reserved."> 
  </a> </p>
</body>
</html>
