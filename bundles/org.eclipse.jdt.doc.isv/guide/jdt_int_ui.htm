<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../book.css" charset="ISO-8859-1" type="text/css">
<title>JDT User interface</title>
<link rel="stylesheet" type="text/css" href="../book.css">
</head>
<body>
<h2>JDT user interface</h2>
<p> The <b> org.eclipse.jdt.ui</b> plug-in implements the Java specific user interface 
  classes that manipulate Java elements. The following roadmap outlines the major 
  functions in the <b>org.eclipse.jdt.ui </b> package and its subpackages.</p>
<ul>
  <li>
    <p>
    <b><a href="../reference/api/org/eclipse/jdt/ui/package-summary.html"> org.eclipse.jdt.ui</a> 
    </b>provides support classes for presenting Java elements in the user interface. 
    The class <a href="../reference/api/org/eclipse/jdt/ui/JavaUI.html"> JavaUI</a> 
    is the main access point to the Java user interface components. It allows 
    you to programmatically open editors on Java elements, open a Java or Java 
    Browsing perspective and open package and type prompter dialogs. The package 
    exposes constants for retrieving Java user interface parts from the workbench 
    registry and for retrieving preference settings from the Java preferences. 
    JavaUI gives access to the <a href="../reference/api/org/eclipse/jdt/ui/IWorkingCopyManager.html"> 
    IWorkingCopyManager</a> . It manages the working copies that are in use for 
    Java compilation units.</p>
	<p>
    The interfaces <a href="../reference/api/org/eclipse/jdt/ui/ITypeHierarchyViewPart.html"> 
    ITypeHierarchyViewPart</a> and <a href="../reference/api/org/eclipse/jdt/ui/IPackagesViewPart.html"> 
    IPackagesViewPart</a> define the programming interface that interacts with 
    the type hierarchy and packages view parts.
	</p>
	<p>
    The classes <a href="../reference/api/org/eclipse/jdt/ui/StandardJavaElementContentProvider.html"> 
    StandardJavaElementContentProvider</a> and <a href="../reference/api/org/eclipse/jdt/ui/JavaElementLabelProvider.html"> 
    JavaElementLabelProvider</a> support the presentation of Java elements in 
    JFace viewers. <a href="../reference/api/org/eclipse/jdt/ui/JavaElementSorter.html"> 
    JavaElementSorter</a> can be plugged into a JFace viewer to sort Java elements 
    according to the Java UI sorting style.</p>
    The class <a href="../reference/api/org/eclipse/jdt/ui/JavaElementImageDescriptor.html"> 
    JavaElementImageDescriptor</a> can be used to create an image based on an 
    arbitrary base image descriptor and a set of flags specifying which Java specific 
    adornments (e.g. static, final, synchronized, ....) are to be superimposed 
    on the image.
  </li>
  <li><b><a href="../reference/api/org/eclipse/jdt/ui/actions/package-summary.html"> 
    org.eclipse.jdt.ui.actions</a> </b>provides actions and action groups to populate 
    tool bars, global menu bars and context menus with JDT specific functionality. 
    It is recommended that clients use action groups to populate menus and tool 
    bars instead of adding actions directly. This shields clients from missing 
    newly added actions or from using outdated menu structures.<br>
  </li>
  <li><b><a href="../reference/api/org/eclipse/jdt/ui/jarpackager/package-summary.html"> 
    org.eclipse.jdt.ui.jarpackager</a> </b>provides classes and interfaces to 
    generate a JAR file. It offers hooks to extend <a href="../reference/api/org/eclipse/jdt/ui/jarpackager/JarPackageData.html"> 
    JarPackageData</a> to load and store the JarPackageData and to <a href="../reference/api/org/eclipse/jdt/ui/jarpackager/JarWriter.html"> 
    write</a> the JAR itself.&nbsp;
  </li>
  <li><b><a href="../reference/api/org/eclipse/jdt/ui/text/package-summary.html"> 
    org.eclipse.jdt.ui.text</a> </b>provides support classes for presenting Java 
    text. The class <a href="../reference/api/org/eclipse/jdt/ui/text/JavaTextTools.html"> 
    JavaTextTools</a> provides access to the different scanners to partition and 
    color Java source code. The class <a href="../reference/api/org/eclipse/jdt/ui/text/JavaSourceViewerConfiguration.html"> 
    JavaSourceViewerConfiguration</a> defines a standard configuration for a Java 
    source viewer.
  </li>
  <li><b><a href="../reference/api/org/eclipse/jdt/ui/text/java/hover/package-summary.html"> 
    org.eclipse.jdt.ui.text.java.hover</a> </b>provides implentations for presenting 
    text hovers in Java editors. The interface <a href="../reference/api/org/eclipse/jdt/ui/text/java/hover/IJavaEditorTextHover.html"> 
    IJavaEditorTextHover</a> defines the programming interface for a text hover. 
    See extension point <a href="../reference/extension-points/org_eclipse_jdt_ui_javaEditorTextHovers.html"> 
    org.eclipse.jdt.ui.javaEditorTextHovers</a> for instructions on how to define 
    a new Java text hover.
  </li>
  <li><b><a href="../reference/api/org/eclipse/jdt/ui/wizards/package-summary.html"> 
    org.eclipse.jdt.ui.wizards</a> </b>provides wizard pages for creating Java 
    elements. Supported elements are projects, packages, classes and interfaces. 
    The class&nbsp; <a href="../reference/api/org/eclipse/jdt/ui/wizards/JavaCapabilityConfigurationPage.html"> 
    JavaCapabilityConfigurationPage</a> supports editing the Java build settings 
    (source folder setup, referenced projects and, referenced and exported libraries).
  </li>
</ul>
<p><a href="../hglegal2002.htm"><img border="0" src="../ngibmcpy2002.gif"  alt="Copyright IBM Corporation and others 2000, 2002. All Rights Reserved."> 
  </a> </p>
</body>
</html>
